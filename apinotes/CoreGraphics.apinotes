---
Name: CoreGraphics
SwiftInferImportAsMember: true

#
# Global functions
#
Functions:
# The below are inline functions that are irrelevant due to memberwise inits
- Name: CGPointMake
  Availability: nonswift
- Name: CGSizeMake
  Availability: nonswift
- Name: CGVectorMake
  Availability: nonswift
- Name: CGRectMake
  Availability: nonswift
- Name: CGAffineTransformMake
  Availability: nonswift
# The below are fixups that inference didn't quite do what we wanted, and are
# pulled over from what used to be in the overlays
- Name: CGRectIsNull
  SwiftName: "getter:CGRect.isNull(self:)"
- Name: CGRectIsEmpty
  SwiftName: "getter:CGRect.isEmpty(self:)"
- Name: CGRectIsInfinite
  SwiftName: "getter:CGRect.isInfinite(self:)"
- Name: CGRectStandardize
  SwiftName: "getter:CGRect.standardized(self:)"
- Name: CGRectIntegral
  SwiftName: "getter:CGRect.integral(self:)"
- Name: CGRectInset
  SwiftName: "CGRect.insetBy(self:dx:dy:)"
- Name: CGRectOffset
  SwiftName: "CGRect.offsetBy(self:dx:dy:)"
- Name: CGRectUnion
  SwiftName: "CGRect.union(self:_:)"
- Name: CGRectIntersection
  SwiftName: "CGRect.intersection(self:_:)"
- Name: CGRectContainsRect
  SwiftName: "CGRect.contains(self:_:)"
- Name: CGRectContainsPoint
  SwiftName: "CGRect.contains(self:_:)"
- Name: CGRectIntersectsRect
  SwiftName: "CGRect.intersects(self:_:)"
# The below are not available in Swift
# FIXME: empty-argument-label pattern is currently failing SILGen
- Name: CGColorSpaceCreateDeviceGray
  SwiftName: CGColorSpaceCreateDeviceGray()
- Name: CGColorSpaceCreateDeviceRGB
  SwiftName: CGColorSpaceCreateDeviceRGB()
- Name: CGColorSpaceCreateDeviceCMYK
  SwiftName: CGColorSpaceCreateDeviceCMYK()
# TODO: make these unavailable, but they're needed for pre-iOS 9
# - Name: CGColorSpaceCreateDeviceGray
#   Availability: nonswift
# - Name: CGColorSpaceCreateDeviceRGB
#   Availability: nonswift
# - Name: CGColorSpaceCreateDeviceCMYK
#   Availability: nonswift

# The below are attempts at providing better names than inference
# CGAffineTransform
- Name: CGAffineTransformMakeTranslation
  SwiftName: CGAffineTransform.init(translationX:y:)
- Name: CGAffineTransformMakeScale
  SwiftName: CGAffineTransform.init(scaleX:y:)
- Name: CGAffineTransformMakeRotation
  SwiftName: CGAffineTransform.init(rotationAngle:)
- Name: CGAffineTransformIsIdentity
  SwiftName: getter:CGAffineTransform.isIdentity(self:)
- Name: CGAffineTransformTranslate
  SwiftName: CGAffineTransform.translateBy(self:x:y:)
- Name: CGAffineTransformScale
  SwiftName: CGAffineTransform.scaleBy(self:x:y:)
- Name: CGAffineTransformRotate
  SwiftName: CGAffineTransform.rotate(self:_:)
- Name: CGAffineTransformConcat
  SwiftName: CGAffineTransform.concat(self:_:)
- Name: CGAffineTransformEqualToTransform
  SwiftName: CGAffineTransform.equalTo(self:_:)
- Name: CGPointApplyAffineTransform
  SwiftName: CGPoint.apply(self:transform:)
- Name: CGSizeApplyAffineTransform
  SwiftName: CGSize.apply(self:transform:)
- Name: CGRectApplyAffineTransform
  SwiftName: CGRect.apply(self:transform:)
# CGBitmapContext
- Name: CGBitmapContextCreateWithData
  SwiftName: CGContextRef.init(data:width:height:bitsPerComponent:bytesPerRow:space:bitmapInfo:releaseCallback:releaseInfo:)
- Name: CGBitmapContextCreate
  SwiftName: CGContextRef.init(data:width:height:bitsPerComponent:bytesPerRow:space:bitmapInfo)
- Name: CGBitmapContextGetData
  SwiftName: getter:CGContextRef.data(self:)
- Name: CGBitmapContextGetWidth
  SwiftName: getter:CGContextRef.width(self:)
- Name: CGBitmapContextGetHeight
  SwiftName: getter:CGContextRef.height(self:)
- Name: CGBitmapContextGetBitsPerComponent
  SwiftName: getter:CGContextRef.bitsPerComponent(self:)
- Name: CGBitmapContextGetBitsPerPixel
  SwiftName: getter:CGContextRef.bitsPerPixel(self:)
- Name: CGBitmapContextGetBytesPerRow
  SwiftName: getter:CGContextRef.bytesPerRow(self:)
- Name: CGBitmapContextGetColorSpace
  SwiftName: getter:CGContextRef.colorSpace(self:)
- Name: CGBitmapContextGetAlphaInfo
  SwiftName: getter:CGContextRef.alphaInfo(self:)
- Name: CGBitmapContextCreateImage
  SwiftName: CGContextRef.makeImage(self:)
# CGColor
- Name: CGColorCreate
  SwiftName: CGColorRef.init(colorSpace:components:)
- Name: CGColorCreateGenericGray
  SwiftName: CGColorRef.init(gray:alpha:)
- Name: CGColorCreateGenericRGB
  SwiftName: CGColorRef.init(red:green:blue:alpha:)
- Name: CGColorCreateCMYK
  SwiftName: CGColorRef.init(cyan:magenta:yellow:black:alpha:)
- Name: CGColorGetConstantColor
  SwiftName: CGColorRef.constantColor(for:)
- Name: CGColorCreateWithPattern
  SwiftName: CGColorRef.init(patternSpace:pattern:components:)
- Name: CGColorCreateCopy
  SwiftName: CGColorRef.init(_:)
# - Name: CGColorCreateCopyWithAlpha
#   SwiftName: CGColorRef.init(_:alpha:)
- Name: CGColorCreateCopyByMatchingToColorSpace
  SwiftName: CGColorRef.convert(_:intent:self:options:)
- Name: CGColorEqualToColor
  SwiftName: CGColorRef.equalTo(self:_:)
# CGColorSpace
- Name: CGColorSpaceCreateWithICCProfile
  SwiftName: CGColorSpaceRef.init(iccProfileData:)
- Name: CGColorSpaceCreateWithPlatformColorSpace
  SwiftName: CGColorSpaceRef.init(platformColorSpaceRef:)
- Name: CGColorSpaceCreateWithName
  SwiftName: CGColorSpaceRef.init(name:)
- Name: CGColorSpaceCopyName
  SwiftName: getter:CGColorSpaceRef.name(self:)
- Name: CGColorSpaceCopyICCProfile
  SwiftName: getter:CGColorSpaceRef.iccData(self:)
# CGContext
- Name: CGContextScaleCTM
  SwiftName: CGContextRef.scale(self:x:y:)
- Name: CGContextTranslateCTM
  SwiftName: CGContextRef.translate(self:x:y:)
- Name: CGContextRotateCTM
  SwiftName: CGContextRef.rotate(self:byAngle:)
- Name: CGContextSetLineWidth
  SwiftName: CGContextRef.setLineWidth(self:_:)
- Name: CGContextSetMiterLimit
  SwiftName: CGContextRef.setMiterLimit(self:_:)
# - Name: CGContextSetLineDash
#   SwiftName: CGContextRef.setLineDash(self:phase:lengths:count:)
- Name: CGContextSetFlatness
  SwiftName: CGContextRef.setFlatness(self:_:)
- Name: CGContextSetAlpha
  SwiftName: CGContextRef.setAlpha(self:_:)
- Name: CGContextMoveToPoint
  SwiftName: CGContextRef.moveTo(self:x:y:)
- Name: CGContextAddLineToPoint
  SwiftName: CGContextRef.addLineTo(self:x:y:)
- Name: CGContextAddCurveToPoint
  SwiftName: CGContextRef.addCurveTo(self:cp1x:cp1y:cp2x:cp2y:endingAtX:y:)
- Name: CGContextAddQuadCurveToPoint
  SwiftName: CGContextRef.addQuadCurveTo(self:cpx:cpy:endingAtX:y:)
- Name: CGContextAddRects
  SwiftName: CGContextRef.addRects(self:_:count:)
- Name: CGContextAddLines
  SwiftName: CGContextRef.addLines(self:between:count:)
- Name: CGContextAddEllipseInRect
  SwiftName: CGContextRef.addEllipse(self:inRect:)
- Name: CGContextAddArc
  SwiftName: CGContextRef.addArc(self:centerX:y:radius:startAngle:endAngle:clockwise:)
- Name: CGContextAddArcToPoint
  SwiftName: CGContextRef.addArc(self:x1:y1:x2:y2:radius:)
- Name: CGContextIsPathEmpty
  SwiftName: getter:CGContextRef.isPathEmpty(self:)
- Name: CGContextGetPathCurrentPoint
  SwiftName: getter:CGContextRef.currentPointOfPath(self:)
- Name: CGContextGetPathBoundingBox
  SwiftName: getter:CGContextRef.boundingBoxOfPath(self:)
- Name: CGContextCopyPath
  SwiftName: CGContextRef.path(self:)
- Name: CGContextPathContainsPoint
  SwiftName: CGContextRef.pathContains(self:_:mode:)
- Name: CGContextDrawPath
  SwiftName: CGContextRef.drawPath(self:using:)
- Name: CGContextFillRect
  SwiftName: CGContextRef.fill(self:_:)
- Name: CGContextFillRects
  SwiftName: CGContextRef.fill(self:_:count:)
- Name: CGContextStrokeRect
  SwiftName: CGContextRef.stroke(self:_:)
- Name: CGContextStrokeRectWithWidth
  SwiftName: CGContextRef.stroke(self:_:width:)
- Name: CGContextClearRect
  SwiftName: CGContextRef.clear(self:_:)
- Name: CGContextFillEllipseInRect
  SwiftName: CGContextRef.fillEllipse(self:in:)
- Name: CGContextStrokeEllipseInRect
  SwiftName: CGContextRef.strokeEllipse(self:in:)
- Name: CGContextStrokeLineSegments
  SwiftName: CGContextRef.strokeLineSegments(self:between:count:)
- Name: CGContextGetClipBoundingBox
  SwiftName: getter:CGContextRef.boundingBoxOfClipPath(self:)
- Name: CGContextClipToRect
  SwiftName: CGContextRef.clipTo(self:_:)
- Name: CGContextClipToRects
  SwiftName: CGContextRef.clipTo(self:_:count:)
- Name: CGContextSetFillColor
  SwiftName: CGContextRef.setFillColor(self:_:)
- Name: CGContextSetFillColorWithColor
  SwiftName: CGContextRef.setFillColor(self:_:)
- Name: CGContextSetFillPattern
  SwiftName: CGContextRef.setFillPattern(self:_:colorComponents:)
- Name: CGContextSetStrokePattern
  SwiftName: CGContextRef.setStrokePattern(self:_:colorComponents:)
- Name: CGContextSetPatternPhase
  SwiftName: CGContextRef.setPatternPhase(self:_:)
- Name: CGContextSetGrayFillColor
  SwiftName: CGContextRef.setFillColor(self:gray:alpha:)
- Name: CGContextSetGrayStrokeColor
  SwiftName: CGContextRef.setStrokeColor(self:gray:alpha:)
- Name: CGContextSetRGBFillColor
  SwiftName: CGContextRef.setFillColor(self:red:green:blue:alpha:)
- Name: CGContextSetRGBStrokeColor
  SwiftName: CGContextRef.setStrokeColor(self:red:green:blue:alpha:)
- Name: CGContextSetStrokeColor
  SwiftName: CGContextRef.setStrokeColor(self:_:)
- Name: CGContextSetStrokeColorWithColor
  SwiftName: CGContextRef.setStrokeColor(self:_:)
- Name: CGContextSetCMYKFillColor
  SwiftName: CGContextRef.setFillColor(self:cyan:magenta:yellow:black:alpha:)
- Name: CGContextSetCMYKStrokeColor
  SwiftName: CGContextRef.setStrokeColor(self:cyan:magenta:yellow:black:alpha:)
- Name: CGContextDrawImage
  SwiftName: CGContextRef.draw(self:in:image:)
- Name: CGContextDrawTiledImage
  SwiftName: CGContextRef.draw(self:in:byTiling:)
- Name: CGContextSetShadowWithColor
  SwiftName: CGContextRef.setShadow(self:offset:blur:color:)
# - Name: CGContextSetShadow
#   SwiftName: CGContextRef.setShadow(self:offset:blur:)
- Name: CGContextSetCharacterSpacing
  SwiftName: CGContextRef.setCharacterSpacing(self:_:)
- Name: CGContextGetTextPosition
  SwiftName: getter:CGContextRef.textPosition(self:)
- Name: CGContextSetFontSize
  SwiftName: CGContextRef.setFontSize(self:_:)
- Name: CGContextShowGlyphsAtPositions
  SwiftName: CGContextRef.showGlyphs(self:_:atPositions:count:)
# - Name: CGContextBeginPage
#   SwiftName: CGContextRef.beginPage(self:mediaBox:)
- Name: CGContextSetShouldAntialias
  SwiftName: CGContextRef.setShouldAntialias(self:_:)
- Name: CGContextSetAllowsAntialiasing
  SwiftName: CGContextRef.setAllowsAntialiasing(self:_:)
- Name: CGContextSetShouldSmoothFonts
  SwiftName: CGContextRef.setShouldSmoothFonts(self:_:)
- Name: CGContextSetAllowsFontSmoothing
  SwiftName: CGContextRef.setAllowsFontSmoothing(self:_:)
- Name: CGContextSetShouldSubpixelPositionFonts
  SwiftName: CGContextRef.setShouldSubpixelPositionFonts(self:_:)
- Name: CGContextSetAllowsFontSubpixelPositioning
  SwiftName: CGContextRef.setAllowsFontSubpixelPositioning(self:_:)
- Name: CGContextSetShouldSubpixelQuantizeFonts
  SwiftName: CGContextRef.setShouldSubpixelQuantizeFonts(self:_:)
- Name: CGContextSetAllowsFontSubpixelQuantization
  SwiftName: CGContextRef.setAllowsFontSubpixelQuantization(self:_:)
- Name: CGContextBeginTransparencyLayer
  SwiftName: CGContextRef.beginTransparencyLayer(self:auxiliaryInfo:)
- Name: CGContextBeginTransparencyLayerWithRect
  SwiftName: CGContextRef.beginTransparencyLayer(self:in:auxiliaryInfo:)
- Name: CGContextConvertPointToDeviceSpace
  SwiftName: CGContextRef.convertToDeviceSpace(self:_:)
- Name: CGContextConvertPointToUserSpace
  SwiftName: CGContextRef.convertToUserSpace(self:_:)
- Name: CGContextConvertSizeToDeviceSpace
  SwiftName: CGContextRef.convertToDeviceSpace(self:_:)
- Name: CGContextConvertSizeToUserSpace
  SwiftName: CGContextRef.convertToUserSpace(self:_:)
- Name: CGContextConvertRectToDeviceSpace
  SwiftName: CGContextRef.convertToDeviceSpace(self:_:)
- Name: CGContextConvertRectToUserSpace
  SwiftName: CGContextRef.convertToUserSpace(self:_:)
# CGDataConsumer
# - Name: CGDataConsumerCreateWithURL
#   SwiftName: CGDataConsumerRef.init(url:)
# - Name: CGDataConsumerCreateWithCFData
#   SwiftName: CGDataConsumerRef.init(data:)
# CGDataProvider
# - Name: CGDataProviderCreateWithData
#   SwiftName: CGDataProviderRef.init(dataInfo:data:size:releaseData:)
# - Name: CGDataProviderCreateWithCFData
#   SwiftName: CGDataProviderRef.init(data:)
# - Name: CGDataProviderCreateWithURL
#   SwiftName: CGDataProviderRef.init(url:)
# - Name: CGDataProviderCreateWithFilename
#   SwiftName: CGDataProviderRef.init(filename:)
- Name: CGDataProviderCopyData
  SwiftName: getter:CGDataProviderRef.data(self:)
# CGDirectDisplay
- Name: CGDisplayModeCopyPixelEncoding
  SwiftName: getter:CGDisplayModeRef.pixelEncoding(self:)
- Name: CGDisplayCreateImageForRect
  SwiftName: CGDisplayCreateImage(_:rect:)
# CGEvent
- Name: CGEventCreateFromData
  SwiftName: CGEventRef.init(withDataAllocator:data:)
- Name: CGEventCreateData
  SwiftName: getter:CGEventRef.data(self:)
- Name: CGEventCreateCopy
  SwiftName: CGEventRef.copy(self:)
- Name: CGEventPostToPid
  SwiftName: CGEventRef.postToPid(_:self:)
- Name: CGEventCreateSourceFromEvent
  SwiftName: CGEventSourceRef.init(event:)
# CGFont
- Name: CGFontCreateWithDataProvider
  SwiftName: CGFontRef.init(_:)
- Name: CGFontCreateWithFontName
  SwiftName: CGFontRef.init(_:)
- Name: CGFontCopyPostScriptName
  SwiftName: getter:CGFontRef.postScriptName(self:)
- Name: CGFontCopyFullName
  SwiftName: getter:CGFontRef.fullName(self:)
- Name: CGFontCopyVariationAxes
  SwiftName: getter:CGFontRef.variationAxes(self:)
- Name: CGFontCopyVariations
  SwiftName: getter:CGFontRef.variations(self:)
- Name: CGFontCopyGlyphNameForGlyph
  SwiftName: CGFontRef.name(self:for:)
- Name: CGFontCopyTableTags
  SwiftName: getter:CGFontRef.tableTags(self:)
- Name: CGFontCopyTableForTag
  SwiftName: CGFontRef.table(self:for:)
# CGGeometry
- Name: CGPointEqualToPoint
  SwiftName: CGPoint.equalTo(self:_:)
- Name: CGPointCreateDictionaryRepresentation
  SwiftName: getter:CGPoint.dictionaryRepresentation(self:)
- Name: CGRectCreateDictionaryRepresentation
  SwiftName: getter:CGRect.dictionaryRepresentation(self:)
- Name: CGPointMakeWithDictionaryRepresentation
  SwiftName: CGPoint.makeWithDictionaryRepresentation(_:self:)
- Name: CGSizeMakeWithDictionaryRepresentation
  SwiftName: CGSize.makeWithDictionaryRepresentation(_:self:)
- Name: CGRectMakeWithDictionaryRepresentation
  SwiftName: CGRect.makeWithDictionaryRepresentation(_:self:)
- Name: CGSizeEqualToSize
  SwiftName: CGSize.equalTo(self:_:)
- Name: CGRectEqualToRect
  SwiftName: CGRect.equalTo(self:_:)
# CGGradient
# - Name: CGGradientCreateWithColorComponents
#   SwiftName: CGGradient.init(colorComponentsSpace:components:locations:count:)
# - Name: CGGradientCreateWithColorSpace
#   SwiftName: CGGradient.init(colorSpace:colors:locations:)

# CGImage
- Name: CGImageCreateCopyWithColorSpace
  SwiftName: CGImageRef.copy(self:colorSpace:)
- Name: CGImageCreateWithImageInRect
  SwiftName: CGImageRef.cropping(self:to:)
- Name: CGImageCreateWithMask
  SwiftName: CGImageRef.masking(self:_:)
- Name: CGImageCreateWithMaskingColors
  SwiftName: CGImageRef.copy(self:maskingColorComponents:)
- Name: CGImageIsMask
  SwiftName: getter:CGImageRef.isMask(self:)
# CGLayer
- Name: CGLayerCreateWithContext
  SwiftName: CGLayerRef.init(_:size:auxiliaryInfo:)
- Name: CGContextDrawLayerInRect
  SwiftName: CGContextRef.draw(self:in:layer:)
- Name: CGContextDrawLayerAtPoint
  SwiftName: CGContextRef.draw(self:at:layer:)

# CGPDFContext
- Name: CGPDFContextCreate
  SwiftName: CGContextRef.init(consumer:mediaBox:_:)
- Name: CGPDFContextCreateWithURL
  SwiftName: CGContextRef.init(_:mediaBox:_:)
- Name: CGPDFContextClose
  SwiftName: CGContextRef.closePDF(self:)
- Name: CGPDFContextBeginPage
  SwiftName: CGContextRef.beginPage(self:_:)
- Name: CGPDFContextEndPage
  SwiftName: CGContextRef.endPage(self:)
- Name: CGPDFContextAddDocumentMetadata
  SwiftName: CGContextRef.addDocumentMetadata(self:_:)
- Name: CGPDFContextSetURLForRect
  SwiftName: CGContextRef.setURL(self:_:for:)
- Name: CGPDFContextAddDestinationAtPoint
  SwiftName: CGContextRef.addDestination(self:_:at:)
- Name: CGPDFContextSetDestinationForRect
  SwiftName: CGContextRef.setDestination(self:_:for:)

# CGPDFDocument
- Name: CGPDFDocumentGetID
  SwiftName: getter:CGPDFDocumentRef.fileIdentifier(self:)
- Name: CGPDFDocumentIsEncrypted
  SwiftName: getter:CGPDFDocumentRef.isEncrypted(self:)
- Name: CGPDFDocumentIsUnlocked
  SwiftName: getter:CGPDFDocumentRef.isUnlocked(self:)
- Name: CGPDFDocumentAllowsPrinting
  SwiftName: getter:CGPDFDocumentRef.allowsPrinting(self:)
- Name: CGPDFDocumentAllowsCopying
  SwiftName: getter:CGPDFDocumentRef.allowsCopying(self:)
- Name: CGPDFDocumentCreateWithProvider
  SwiftName: CGPDFDocumentRef.init(_:)
- Name: CGPDFDocumentCreateWithURL
  SwiftName: CGPDFDocumentRef.init(_:)
- Name: CGPDFDocumentUnlockWithPassword
  SwiftName: CGPDFDocumentRef.unlockWithPassword(self:_:)
- Name: CGPDFDocumentGetPage
  SwiftName: CGPDFDocumentRef.page(self:at:)
# CGPDFPage
# FIXME: cannot be getter, due to extra parameter
# - Name: CGPDFPageGetBoxRect
#   SwiftName: getter:CGPDFPageRef.boxRect(self:)
# CGPSConverter
- Name: CGPSConverterIsConverting
  SwiftName: getter:CGPSConverterRef.isConverting(self:)
# CGPath
- Name: CGPathCreateCopy
  SwiftName: CGPathRef.copy(self:)
- Name: CGPathCreateCopyByTransformingPath
  SwiftName: CGPathRef.copy(self:using:)
- Name: CGPathCreateMutableCopy
  SwiftName: CGMutablePathRef.copy(self:)
- Name: CGPathCreateMutableCopyByTransformingPath
  SwiftName: CGMutablePathRef.copy(self:using:)
- Name: CGPathEqualToPath
  SwiftName: CGPathRef.equalTo(self:_:)
- Name: CGPathGetPathBoundingBox
  SwiftName: getter:CGPathRef.boundingBoxOfPath(self:)
- Name: CGPathContainsPoint
  SwiftName: CGPathRef.containsPoint(self:_:point:eoFill:)
- Name: CGPathMoveToPoint
  SwiftName: CGMutablePathRef.moveTo(self:_:x:y:)
- Name: CGPathAddLineToPoint
  SwiftName: CGMutablePathRef.addLineTo(self:_:x:y:)
- Name: CGPathAddCurveToPoint
  SwiftName: CGMutablePathRef.addCurve(self:_:cp1x:cp1y:cp2x:cp2y:endingAtX:y:)
- Name: CGPathAddQuadCurveToPoint
  SwiftName: CGMutablePathRef.addQuadCurve(self:_:cpx:cpy:endingAtX:y:)
- Name: CGPathAddRect
  SwiftName: CGMutablePathRef.addRect(self:_:rect:)
- Name: CGPathAddRects
  SwiftName: CGMutablePathRef.addRects(self:_:rects:count:)
- Name: CGPathAddLines
  SwiftName: CGMutablePathRef.addLines(self:_:between:count:)
- Name: CGPathAddEllipseInRect
  SwiftName: CGMutablePathRef.addEllipseIn(self:_:rect:)
- Name: CGPathAddArc
  SwiftName: CGMutablePathRef.addArc(self:_:x:y:radius:startAngle:endAngle:clockwise:)
- Name: CGPathAddArcToPoint
  SwiftName: CGMutablePathRef.addArc(self:_:x1:y1:x2:y2:radius:)
- Name: CGPathAddPath
  SwiftName: CGMutablePathRef.addPath(self:_:path:)
- Name: CGPathIsEmpty
  SwiftName: getter:CGPathRef.isEmpty(self:)

#
# Global variables
#
Globals:
# The below are globals that are defined as opaque C constants for no good
# reason.
- Name: CGPointZero
  Availability: nonswift
- Name: CGSizeZero
  Availability: nonswift
- Name: CGVectorZero
  Availability: nonswift
- Name: CGRectZero
  Availability: nonswift
- Name: CGAffineTransformIdentity
  Availability: nonswift
# The below are not available in Swift
- Name: kCGColorSpaceGenericGray
  Availability: nonswift
- Name: kCGColorSpaceGenericRGB
  Availability: nonswift

#
# Enums
#
Enumerators:
# The below are attempts at providing better names than inference
# CGColorSpace
- Name: kCGRenderingIntentDefault
  SwiftName: CGColorRenderingIntent.defaultIntent
- Name: kCGRenderingIntentAbsoluteColorimetric
  SwiftName: CGColorRenderingIntent.absoluteColorimetric
- Name: kCGRenderingIntentRelativeColorimetric
  SwiftName: CGColorRenderingIntent.relativeColorimetric
- Name: kCGRenderingIntentPerceptual
  SwiftName: CGColorRenderingIntent.perceptual
- Name: kCGRenderingIntentSaturation
  SwiftName: CGColorRenderingIntent.saturation
- Name: kCGMomentumScrollPhaseContinue
  SwiftName: CGMomentumScrollPhase.continuous
# CGContext
- Name: kCGBlendModeXOR
  SwiftName: CGBlendMode.xor
# CGEventTypes
- Name: kCGEventMouseSubtypeDefault
  SwiftName: CGEventMouseSubtype.defaultType
- Name: kCGEventTapOptionDefault
  SwiftName: CGEventTapOptions.defaultTap
- Name: kCGEventSourceStatePrivate
  SwiftName: CGEventSourceStateID.privateState
# CGImage
- Name: kCGImageAlphaOnly
  SwiftName: alphaOnly
# CGWindowLevel
- Name: kCGBaseWindowLevelKey
  SwiftName: CGWindowLevelKey.baseWindow
- Name: kCGMinimumWindowLevelKey
  SwiftName: CGWindowLevelKey.minimumWindow
- Name: kCGDesktopWindowLevelKey
  SwiftName: CGWindowLevelKey.desktopWindow
- Name: kCGDesktopIconWindowLevelKey
  SwiftName: CGWindowLevelKey.desktopIconWindow
- Name: kCGBackstopMenuLevelKey
  SwiftName: CGWindowLevelKey.backstopMenu
- Name: kCGNormalWindowLevelKey
  SwiftName: CGWindowLevelKey.normalWindow
- Name: kCGFloatingWindowLevelKey
  SwiftName: CGWindowLevelKey.floatingWindow
- Name: kCGTornOffMenuWindowLevelKey
  SwiftName: CGWindowLevelKey.tornOffMenuWindow
- Name: kCGDockWindowLevelKey
  SwiftName: CGWindowLevelKey.dockWindow
- Name: kCGMainMenuWindowLevelKey
  SwiftName: CGWindowLevelKey.mainMenuWindow
- Name: kCGStatusWindowLevelKey
  SwiftName: CGWindowLevelKey.statusWindow
- Name: kCGModalPanelWindowLevelKey
  SwiftName: CGWindowLevelKey.modalPanelWindow
- Name: kCGPopUpMenuWindowLevelKey
  SwiftName: CGWindowLevelKey.popUpMenuWindow
- Name: kCGDraggingWindowLevelKey
  SwiftName: CGWindowLevelKey.draggingWindow
- Name: kCGScreenSaverWindowLevelKey
  SwiftName: CGWindowLevelKey.screenSaverWindow
- Name: kCGMaximumWindowLevelKey
  SwiftName: CGWindowLevelKey.maximumWindow
- Name: kCGOverlayWindowLevelKey
  SwiftName: CGWindowLevelKey.overlayWindow
- Name: kCGHelpWindowLevelKey
  SwiftName: CGWindowLevelKey.helpWindow
- Name: kCGUtilityWindowLevelKey
  SwiftName: CGWindowLevelKey.utilityWindow
- Name: kCGCursorWindowLevelKey
  SwiftName: CGWindowLevelKey.cursorWindow
- Name: kCGAssistiveTechHighWindowLevelKey
  SwiftName: CGWindowLevelKey.assistiveTechHighWindow

#
# Tags
#
Tags:
# The below are not available in Swift
- Name: CGGlypDeprecatedEnum
  Availability: nonswift
